{
    "hints": {
        "create(string,uint64,uint64)string": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "set_owner(uint64,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "send_algos(uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "add_txn(string,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMQpieXRlY2Jsb2NrIDB4IDB4MTUxZjdjNzUgMHg2ZTYxNmQ2NSAweDc0Njg3MjY1NzM2ODZmNmM2NCAweDc0NzI2MTZlNzM2MTYzNzQ2OTZmNmU3MzQzNmY3NTZlNzQgMHg3NjY1NzI3MzY5NmY2ZQp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDg1ZDg3NGUzIC8vICJjcmVhdGUoc3RyaW5nLHVpbnQ2NCx1aW50NjQpc3RyaW5nIgo9PQpibnogbWFpbl9sOAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGY2NWE4ZTc5IC8vICJzZXRfb3duZXIodWludDY0LHN0cmluZylzdHJpbmciCj09CmJueiBtYWluX2w3CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4OGZiNzBhMDcgLy8gInNlbmRfYWxnb3ModWludDY0KXN0cmluZyIKPT0KYm56IG1haW5fbDYKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHgxNmExNmMwNSAvLyAiYWRkX3R4bihzdHJpbmcsc3RyaW5nKXN0cmluZyIKPT0KYm56IG1haW5fbDUKZXJyCm1haW5fbDU6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgYWRkdHhuY2FzdGVyXzgKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDY6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgc2VuZGFsZ29zY2FzdGVyXzcKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDc6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgc2V0b3duZXJjYXN0ZXJfNgppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sODoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAo9PQomJgphc3NlcnQKY2FsbHN1YiBjcmVhdGVjYXN0ZXJfNQppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIHByZWZpeF9rZXlfZ2VuCnByZWZpeGtleWdlbl8wOgpwcm90byAxIDEKcHVzaGJ5dGVzIDB4NmY3NzZlNjU3MjczIC8vICJvd25lcnMiCmZyYW1lX2RpZyAtMQpjb25jYXQKcmV0c3ViCgovLyBjcmVhdGUKY3JlYXRlXzE6CnByb3RvIDMgMQpieXRlY18wIC8vICIiCmJ5dGVjXzIgLy8gIm5hbWUiCmJ5dGVjXzAgLy8gIiIKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMyAvLyAidGhyZXNob2xkIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlYyA0IC8vICJ0cmFuc2FjdGlvbnNDb3VudCIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgNSAvLyAidmVyc2lvbiIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMiAvLyAibmFtZSIKZnJhbWVfZGlnIC0zCmV4dHJhY3QgMiAwCmFwcF9nbG9iYWxfcHV0CmJ5dGVjIDUgLy8gInZlcnNpb24iCmZyYW1lX2RpZyAtMgphcHBfZ2xvYmFsX3B1dApieXRlY18zIC8vICJ0aHJlc2hvbGQiCmZyYW1lX2RpZyAtMQphcHBfZ2xvYmFsX3B1dApieXRlYyA0IC8vICJ0cmFuc2FjdGlvbnNDb3VudCIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKcHVzaGJ5dGVzIDB4MDAxZTQzNzI2NTYxNzQ2NTY0MjA3MzZkNjE3Mjc0MjA2MzZmNmU3NDcyNjE2Mzc0MjA3NzYxNmM2YzY1NzQyZSAvLyAweDAwMWU0MzcyNjU2MTc0NjU2NDIwNzM2ZDYxNzI3NDIwNjM2ZjZlNzQ3MjYxNjM3NDIwNzc2MTZjNmM2NTc0MmUKZnJhbWVfYnVyeSAwCnJldHN1YgoKLy8gc2V0X293bmVyCnNldG93bmVyXzI6CnByb3RvIDIgMQpieXRlY18wIC8vICIiCmZyYW1lX2RpZyAtMgppdG9iCmNhbGxzdWIgcHJlZml4a2V5Z2VuXzAKZnJhbWVfZGlnIC0xCmV4dHJhY3QgMiAwCmFwcF9nbG9iYWxfcHV0CnB1c2hieXRlcyAweDAwMGE1MzY1NzQyMDZmNzc2ZTY1NzIyZSAvLyAweDAwMGE1MzY1NzQyMDZmNzc2ZTY1NzIyZQpmcmFtZV9idXJ5IDAKcmV0c3ViCgovLyBzZW5kX2FsZ29zCnNlbmRhbGdvc18zOgpwcm90byAxIDEKYnl0ZWNfMCAvLyAiIgppdHhuX2JlZ2luCmludGNfMSAvLyBwYXkKaXR4bl9maWVsZCBUeXBlRW51bQpmcmFtZV9kaWcgLTEKaXR4bl9maWVsZCBBbW91bnQKdHhuYSBBY2NvdW50cyAwCml0eG5fZmllbGQgUmVjZWl2ZXIKaXR4bl9zdWJtaXQKcHVzaGJ5dGVzIDB4MDAxNDQzNzI2NTYxNzQ2NTY0MjA3MDYxNzk2ZDY1NmU3NDIwNzQ3ODZlMmUgLy8gMHgwMDE0NDM3MjY1NjE3NDY1NjQyMDcwNjE3OTZkNjU2ZTc0MjA3NDc4NmUyZQpmcmFtZV9idXJ5IDAKcmV0c3ViCgovLyBhZGRfdHhuCmFkZHR4bl80Ogpwcm90byAyIDEKYnl0ZWNfMCAvLyAiIgpmcmFtZV9kaWcgLTIKZXh0cmFjdCAyIDAKZnJhbWVfZGlnIC0xCmV4dHJhY3QgMiAwCmJveF9wdXQKcHVzaGJ5dGVzIDB4MDAxNDQxNjQ2NDY1NjQyMDc0Nzg2ZTIwNzQ2ZjIwNzc2MTZjNmM2NTc0MmUgLy8gMHgwMDE0NDE2NDY0NjU2NDIwNzQ3ODZlMjA3NDZmMjA3NzYxNmM2YzY1NzQyZQpmcmFtZV9idXJ5IDAKcmV0c3ViCgovLyBjcmVhdGVfY2FzdGVyCmNyZWF0ZWNhc3Rlcl81Ogpwcm90byAwIDAKYnl0ZWNfMCAvLyAiIgpkdXAKaW50Y18wIC8vIDAKZHVwCnR4bmEgQXBwbGljYXRpb25BcmdzIDEKZnJhbWVfYnVyeSAxCnR4bmEgQXBwbGljYXRpb25BcmdzIDIKYnRvaQpmcmFtZV9idXJ5IDIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwpidG9pCmZyYW1lX2J1cnkgMwpmcmFtZV9kaWcgMQpmcmFtZV9kaWcgMgpmcmFtZV9kaWcgMwpjYWxsc3ViIGNyZWF0ZV8xCmZyYW1lX2J1cnkgMApieXRlY18xIC8vIDB4MTUxZjdjNzUKZnJhbWVfZGlnIDAKY29uY2F0CmxvZwpyZXRzdWIKCi8vIHNldF9vd25lcl9jYXN0ZXIKc2V0b3duZXJjYXN0ZXJfNjoKcHJvdG8gMCAwCmJ5dGVjXzAgLy8gIiIKaW50Y18wIC8vIDAKYnl0ZWNfMCAvLyAiIgp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmJ0b2kKZnJhbWVfYnVyeSAxCnR4bmEgQXBwbGljYXRpb25BcmdzIDIKZnJhbWVfYnVyeSAyCmZyYW1lX2RpZyAxCmZyYW1lX2RpZyAyCmNhbGxzdWIgc2V0b3duZXJfMgpmcmFtZV9idXJ5IDAKYnl0ZWNfMSAvLyAweDE1MWY3Yzc1CmZyYW1lX2RpZyAwCmNvbmNhdApsb2cKcmV0c3ViCgovLyBzZW5kX2FsZ29zX2Nhc3RlcgpzZW5kYWxnb3NjYXN0ZXJfNzoKcHJvdG8gMCAwCmJ5dGVjXzAgLy8gIiIKaW50Y18wIC8vIDAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpidG9pCmZyYW1lX2J1cnkgMQpmcmFtZV9kaWcgMQpjYWxsc3ViIHNlbmRhbGdvc18zCmZyYW1lX2J1cnkgMApieXRlY18xIC8vIDB4MTUxZjdjNzUKZnJhbWVfZGlnIDAKY29uY2F0CmxvZwpyZXRzdWIKCi8vIGFkZF90eG5fY2FzdGVyCmFkZHR4bmNhc3Rlcl84Ogpwcm90byAwIDAKYnl0ZWNfMCAvLyAiIgpkdXBuIDIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpmcmFtZV9idXJ5IDEKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpmcmFtZV9idXJ5IDIKZnJhbWVfZGlnIDEKZnJhbWVfZGlnIDIKY2FsbHN1YiBhZGR0eG5fNApmcmFtZV9idXJ5IDAKYnl0ZWNfMSAvLyAweDE1MWY3Yzc1CmZyYW1lX2RpZyAwCmNvbmNhdApsb2cKcmV0c3Vi",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 11,
            "num_uints": 3
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "name": {
                    "type": "bytes",
                    "key": "name",
                    "descr": "Name of smart contract wallet"
                },
                "threshold": {
                    "type": "uint64",
                    "key": "threshold",
                    "descr": "Signing threshold of smart contract wallet"
                },
                "transactionsCount": {
                    "type": "uint64",
                    "key": "transactionsCount",
                    "descr": "Number of pending transactions in smart contract wallet"
                },
                "version": {
                    "type": "uint64",
                    "key": "version",
                    "descr": "Smart wallet contract version number"
                }
            },
            "reserved": {
                "owners": {
                    "type": "bytes",
                    "max_keys": 10,
                    "descr": "An owner's public address"
                }
            }
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "SmartContractWallet",
        "methods": [
            {
                "name": "create",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "uint64",
                        "name": "version"
                    },
                    {
                        "type": "uint64",
                        "name": "threshold"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "set_owner",
                "args": [
                    {
                        "type": "uint64",
                        "name": "index"
                    },
                    {
                        "type": "string",
                        "name": "address"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "send_algos",
                "args": [
                    {
                        "type": "uint64",
                        "name": "amount"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "add_txn",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "string",
                        "name": "txn"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}