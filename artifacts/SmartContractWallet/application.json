{
    "hints": {
        "create(string,uint64,uint64,uint64)string": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "opt_in_ASA(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "send_algos(uint64,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "send_ASA(uint64,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "sign_txn(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "add_txn(string,string,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "remove_txn(string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 11,
            "num_uints": 3
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "name": {
                    "type": "bytes",
                    "key": "name",
                    "descr": "Name of smart contract wallet"
                },
                "ownersCount": {
                    "type": "uint64",
                    "key": "ownersCount",
                    "descr": "Number of owners in smart contract wallet"
                },
                "threshold": {
                    "type": "uint64",
                    "key": "threshold",
                    "descr": "Signing threshold of smart contract wallet"
                },
                "version": {
                    "type": "uint64",
                    "key": "version",
                    "descr": "Smart wallet contract version number"
                }
            },
            "reserved": {
                "owners": {
                    "type": "bytes",
                    "max_keys": 10,
                    "descr": "An owner's public address"
                }
            }
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "SmartContractWallet",
        "methods": [
            {
                "name": "create",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "uint64",
                        "name": "version"
                    },
                    {
                        "type": "uint64",
                        "name": "threshold"
                    },
                    {
                        "type": "uint64",
                        "name": "ownersCount"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "opt_in_ASA",
                "args": [
                    {
                        "type": "string",
                        "name": "boxName"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "send_algos",
                "args": [
                    {
                        "type": "uint64",
                        "name": "amount"
                    },
                    {
                        "type": "string",
                        "name": "boxName"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "send_ASA",
                "args": [
                    {
                        "type": "uint64",
                        "name": "amount"
                    },
                    {
                        "type": "string",
                        "name": "boxName"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "sign_txn",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "add_txn",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "string",
                        "name": "txn"
                    },
                    {
                        "type": "string",
                        "name": "txnType"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "remove_txn",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "opt_in": "CALL"
    }
}