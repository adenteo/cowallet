{
    "hints": {
        "create(string,uint64,uint64)string": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "set_owner(uint64,address)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "send_algos(uint64,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "sign_txn(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "add_txn(string,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "remove_txn(string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMQpieXRlY2Jsb2NrIDB4IDB4NmY3NzZlNjU3MjczNDM2Zjc1NmU3NCAweDE1MWY3Yzc1IDB4NzQ2ODcyNjU3MzY4NmY2YzY0IDB4MzEgMHg3NjY1NzI3MzY5NmY2ZSAweDY4NjU2YzZjNmYKdHhuIE51bUFwcEFyZ3MKaW50Y18wIC8vIDAKPT0KYm56IG1haW5fbDE0CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ODVkODc0ZTMgLy8gImNyZWF0ZShzdHJpbmcsdWludDY0LHVpbnQ2NClzdHJpbmciCj09CmJueiBtYWluX2wxMwp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGZhNzAzZWJkIC8vICJzZXRfb3duZXIodWludDY0LGFkZHJlc3Mpc3RyaW5nIgo9PQpibnogbWFpbl9sMTIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHg3ZTJkNjYwZCAvLyAic2VuZF9hbGdvcyh1aW50NjQsc3RyaW5nKXN0cmluZyIKPT0KYm56IG1haW5fbDExCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4YjFmZjM4YjUgLy8gInNpZ25fdHhuKHN0cmluZylzdHJpbmciCj09CmJueiBtYWluX2wxMAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDE2YTE2YzA1IC8vICJhZGRfdHhuKHN0cmluZyxzdHJpbmcpc3RyaW5nIgo9PQpibnogbWFpbl9sOQp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDkxZTU4ZmQzIC8vICJyZW1vdmVfdHhuKHN0cmluZyl2b2lkIgo9PQpibnogbWFpbl9sOAplcnIKbWFpbl9sODoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiByZW1vdmV0eG5jYXN0ZXJfMTUKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDk6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgYWRkdHhuY2FzdGVyXzE0CmludGNfMSAvLyAxCnJldHVybgptYWluX2wxMDoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiBzaWdudHhuY2FzdGVyXzEzCmludGNfMSAvLyAxCnJldHVybgptYWluX2wxMToKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiBzZW5kYWxnb3NjYXN0ZXJfMTIKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEyOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIHNldG93bmVyY2FzdGVyXzExCmludGNfMSAvLyAxCnJldHVybgptYWluX2wxMzoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAo9PQomJgphc3NlcnQKY2FsbHN1YiBjcmVhdGVjYXN0ZXJfMTAKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDE0Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMSAvLyBPcHRJbgo9PQpibnogbWFpbl9sMTYKZXJyCm1haW5fbDE2Ogp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQphc3NlcnQKY2FsbHN1YiBvcHRpbl8zCmludGNfMSAvLyAxCnJldHVybgoKLy8gcHJlZml4X2tleV9nZW4KcHJlZml4a2V5Z2VuXzA6CnByb3RvIDEgMQpwdXNoYnl0ZXMgMHg2Zjc3NmU2NTcyNzMgLy8gIm93bmVycyIKZnJhbWVfZGlnIC0xCmNvbmNhdApyZXRzdWIKCi8vIGNyZWF0ZQpjcmVhdGVfMToKcHJvdG8gMyAxCmJ5dGVjXzAgLy8gIiIKYnl0ZWNfMSAvLyAib3duZXJzQ291bnQiCmludGNfMCAvLyAwCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzMgLy8gInRocmVzaG9sZCIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgNSAvLyAidmVyc2lvbiIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKdHhuIFNlbmRlcgpieXRlYyA2IC8vICJoZWxsbyIKZnJhbWVfZGlnIC0zCmV4dHJhY3QgMiAwCmFwcF9sb2NhbF9wdXQKYnl0ZWMgNSAvLyAidmVyc2lvbiIKZnJhbWVfZGlnIC0yCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzMgLy8gInRocmVzaG9sZCIKZnJhbWVfZGlnIC0xCmFwcF9nbG9iYWxfcHV0CnB1c2hieXRlcyAweDAwMWU0MzcyNjU2MTc0NjU2NDIwNzM2ZDYxNzI3NDIwNjM2ZjZlNzQ3MjYxNjM3NDIwNzc2MTZjNmM2NTc0MmUgLy8gMHgwMDFlNDM3MjY1NjE3NDY1NjQyMDczNmQ2MTcyNzQyMDYzNmY2ZTc0NzI2MTYzNzQyMDc3NjE2YzZjNjU3NDJlCmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIHNldF9vd25lcgpzZXRvd25lcl8yOgpwcm90byAyIDEKYnl0ZWNfMCAvLyAiIgpmcmFtZV9kaWcgLTIKaXRvYgpjYWxsc3ViIHByZWZpeGtleWdlbl8wCmZyYW1lX2RpZyAtMQphcHBfZ2xvYmFsX3B1dApieXRlY18xIC8vICJvd25lcnNDb3VudCIKYnl0ZWNfMSAvLyAib3duZXJzQ291bnQiCmFwcF9nbG9iYWxfZ2V0CmludGNfMSAvLyAxCisKYXBwX2dsb2JhbF9wdXQKcHVzaGJ5dGVzIDB4NDE2NDY0NjU2NDIwIC8vICJBZGRlZCAiCmZyYW1lX2RpZyAtMQpjb25jYXQKcHVzaGJ5dGVzIDB4MjA2MTczMjA2Zjc3NmU2NTcyMmUgLy8gIiBhcyBvd25lci4iCmNvbmNhdApmcmFtZV9idXJ5IDAKZnJhbWVfZGlnIDAKbGVuCml0b2IKZXh0cmFjdCA2IDAKZnJhbWVfZGlnIDAKY29uY2F0CmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIG9wdF9pbgpvcHRpbl8zOgpwcm90byAwIDAKdHhuIFNlbmRlcgpjYWxsc3ViIGlzT3duZXJfOAphc3NlcnQKdHhuIFNlbmRlcgpieXRlYyA2IC8vICJoZWxsbyIKcHVzaGJ5dGVzIDB4NGY3MDc0NjU2NDIwNjk2ZSAvLyAiT3B0ZWQgaW4iCmFwcF9sb2NhbF9wdXQKcmV0c3ViCgovLyBzZW5kX2FsZ29zCnNlbmRhbGdvc180Ogpwcm90byAyIDEKYnl0ZWNfMCAvLyAiIgp0eG4gU2VuZGVyCmNhbGxzdWIgaXNPd25lcl84CmFzc2VydApmcmFtZV9kaWcgLTEKZXh0cmFjdCAyIDAKY2FsbHN1YiBoYXNNZXRTaWduYXR1cmVzVGhyZXNob2xkXzkKYXNzZXJ0Cml0eG5fYmVnaW4KaW50Y18xIC8vIHBheQppdHhuX2ZpZWxkIFR5cGVFbnVtCmZyYW1lX2RpZyAtMgppdHhuX2ZpZWxkIEFtb3VudAp0eG5hIEFjY291bnRzIDEKaXR4bl9maWVsZCBSZWNlaXZlcgppdHhuX3N1Ym1pdApwdXNoYnl0ZXMgMHgwMDFkNTM3NTYyNmQ2OTc0NzQ2NTY0MjA0MTRjNDc0ZjczMjA3NDcyNjE2ZTczNjY2NTcyMjA3NDc4NmUyZSAvLyAweDAwMWQ1Mzc1NjI2ZDY5NzQ3NDY1NjQyMDQxNGM0NzRmNzMyMDc0NzI2MTZlNzM2NjY1NzIyMDc0Nzg2ZTJlCmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIHNpZ25fdHhuCnNpZ250eG5fNToKcHJvdG8gMSAxCmJ5dGVjXzAgLy8gIiIKdHhuIFNlbmRlcgpjYWxsc3ViIGlzT3duZXJfOAphc3NlcnQKZnJhbWVfZGlnIC0xCmV4dHJhY3QgMiAwCnR4biBTZW5kZXIKY2FsbHN1YiBpc093bmVyXzgKaW50Y18xIC8vIDEKLQppbnRjXzEgLy8gMQpib3hfZXh0cmFjdApwdXNoYnl0ZXMgMHgzMCAvLyAiMCIKPT0KYXNzZXJ0CmZyYW1lX2RpZyAtMQpleHRyYWN0IDIgMAp0eG4gU2VuZGVyCmNhbGxzdWIgaXNPd25lcl84CmludGNfMSAvLyAxCi0KYnl0ZWMgNCAvLyAiMSIKYm94X3JlcGxhY2UKdHhuIFNlbmRlcgpwdXNoYnl0ZXMgMHgyMDczNjk2NzZlNjU2NDIwNzQ3MjYxNmU3MzYxNjM3NDY5NmY2ZTIwIC8vICIgc2lnbmVkIHRyYW5zYWN0aW9uICIKY29uY2F0CmZyYW1lX2RpZyAtMQpleHRyYWN0IDIgMApjb25jYXQKZnJhbWVfYnVyeSAwCmZyYW1lX2RpZyAwCmxlbgppdG9iCmV4dHJhY3QgNiAwCmZyYW1lX2RpZyAwCmNvbmNhdApmcmFtZV9idXJ5IDAKcmV0c3ViCgovLyBhZGRfdHhuCmFkZHR4bl82Ogpwcm90byAyIDEKYnl0ZWNfMCAvLyAiIgp0eG4gU2VuZGVyCmNhbGxzdWIgaXNPd25lcl84CmFzc2VydApmcmFtZV9kaWcgLTIKZXh0cmFjdCAyIDAKcHVzaGJ5dGVzIDB4MzAzMDMwMzAzMDMwMzAzMDMwMzAgLy8gIjAwMDAwMDAwMDAiCmludGNfMCAvLyAwCmJ5dGVjXzEgLy8gIm93bmVyc0NvdW50IgphcHBfZ2xvYmFsX2dldApzdWJzdHJpbmczCmZyYW1lX2RpZyAtMQpleHRyYWN0IDIgMApjb25jYXQKYm94X3B1dApmcmFtZV9kaWcgLTIKZXh0cmFjdCAyIDAKdHhuIFNlbmRlcgpjYWxsc3ViIGlzT3duZXJfOAppbnRjXzEgLy8gMQotCmJ5dGVjIDQgLy8gIjEiCmJveF9yZXBsYWNlCnB1c2hieXRlcyAweDAwMTg0MTY0NjQ2NTY0MjA3NDc4NmUyMDc0NmYyMDYyNmY3ODIwNzM3NDZmNzI2MTY3NjUgLy8gMHgwMDE4NDE2NDY0NjU2NDIwNzQ3ODZlMjA3NDZmMjA2MjZmNzgyMDczNzQ2ZjcyNjE2NzY1CmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIHJlbW92ZV90eG4KcmVtb3ZldHhuXzc6CnByb3RvIDEgMAp0eG4gU2VuZGVyCmNhbGxzdWIgaXNPd25lcl84CmFzc2VydApmcmFtZV9kaWcgLTEKZXh0cmFjdCAyIDAKYm94X2RlbAphc3NlcnQKcmV0c3ViCgovLyBpc093bmVyCmlzT3duZXJfODoKcHJvdG8gMSAxCmJ5dGVjXzEgLy8gIm93bmVyc0NvdW50IgphcHBfZ2xvYmFsX2dldApzdG9yZSAwCmludGNfMCAvLyAwCnN0b3JlIDEKaXNPd25lcl84X2wxOgpsb2FkIDEKbG9hZCAwCjwKYnogaXNPd25lcl84X2w1CmxvYWQgMQppdG9iCmNhbGxzdWIgcHJlZml4a2V5Z2VuXzAKYXBwX2dsb2JhbF9nZXQKZnJhbWVfZGlnIC0xCj09CmJueiBpc093bmVyXzhfbDQKbG9hZCAxCmludGNfMSAvLyAxCisKc3RvcmUgMQpiIGlzT3duZXJfOF9sMQppc093bmVyXzhfbDQ6CmxvYWQgMQppbnRjXzEgLy8gMQorCnJldHN1Ygppc093bmVyXzhfbDU6CmludGNfMCAvLyAwCnJldHN1YgoKLy8gaGFzTWV0U2lnbmF0dXJlc1RocmVzaG9sZApoYXNNZXRTaWduYXR1cmVzVGhyZXNob2xkXzk6CnByb3RvIDEgMQpieXRlY18xIC8vICJvd25lcnNDb3VudCIKYXBwX2dsb2JhbF9nZXQKc3RvcmUgMgppbnRjXzAgLy8gMApzdG9yZSAzCmludGNfMCAvLyAwCnN0b3JlIDQKaGFzTWV0U2lnbmF0dXJlc1RocmVzaG9sZF85X2wxOgpsb2FkIDQKbG9hZCAyCjwKYm56IGhhc01ldFNpZ25hdHVyZXNUaHJlc2hvbGRfOV9sNQpsb2FkIDMKYnl0ZWNfMyAvLyAidGhyZXNob2xkIgphcHBfZ2xvYmFsX2dldAo+PQpibnogaGFzTWV0U2lnbmF0dXJlc1RocmVzaG9sZF85X2w0CmludGNfMCAvLyAwCnJldHN1YgpoYXNNZXRTaWduYXR1cmVzVGhyZXNob2xkXzlfbDQ6CmludGNfMSAvLyAxCnJldHN1YgpoYXNNZXRTaWduYXR1cmVzVGhyZXNob2xkXzlfbDU6CmZyYW1lX2RpZyAtMQpsb2FkIDQKaW50Y18xIC8vIDEKYm94X2V4dHJhY3QKYnl0ZWMgNCAvLyAiMSIKPT0KYm56IGhhc01ldFNpZ25hdHVyZXNUaHJlc2hvbGRfOV9sNwpoYXNNZXRTaWduYXR1cmVzVGhyZXNob2xkXzlfbDY6CmxvYWQgNAppbnRjXzEgLy8gMQorCnN0b3JlIDQKYiBoYXNNZXRTaWduYXR1cmVzVGhyZXNob2xkXzlfbDEKaGFzTWV0U2lnbmF0dXJlc1RocmVzaG9sZF85X2w3Ogpsb2FkIDMKaW50Y18xIC8vIDEKKwpzdG9yZSAzCmIgaGFzTWV0U2lnbmF0dXJlc1RocmVzaG9sZF85X2w2CgovLyBjcmVhdGVfY2FzdGVyCmNyZWF0ZWNhc3Rlcl8xMDoKcHJvdG8gMCAwCmJ5dGVjXzAgLy8gIiIKZHVwCmludGNfMCAvLyAwCmR1cAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmZyYW1lX2J1cnkgMQp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmJ0b2kKZnJhbWVfYnVyeSAyCnR4bmEgQXBwbGljYXRpb25BcmdzIDMKYnRvaQpmcmFtZV9idXJ5IDMKZnJhbWVfZGlnIDEKZnJhbWVfZGlnIDIKZnJhbWVfZGlnIDMKY2FsbHN1YiBjcmVhdGVfMQpmcmFtZV9idXJ5IDAKYnl0ZWNfMiAvLyAweDE1MWY3Yzc1CmZyYW1lX2RpZyAwCmNvbmNhdApsb2cKcmV0c3ViCgovLyBzZXRfb3duZXJfY2FzdGVyCnNldG93bmVyY2FzdGVyXzExOgpwcm90byAwIDAKYnl0ZWNfMCAvLyAiIgppbnRjXzAgLy8gMApieXRlY18wIC8vICIiCnR4bmEgQXBwbGljYXRpb25BcmdzIDEKYnRvaQpmcmFtZV9idXJ5IDEKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpmcmFtZV9idXJ5IDIKZnJhbWVfZGlnIDEKZnJhbWVfZGlnIDIKY2FsbHN1YiBzZXRvd25lcl8yCmZyYW1lX2J1cnkgMApieXRlY18yIC8vIDB4MTUxZjdjNzUKZnJhbWVfZGlnIDAKY29uY2F0CmxvZwpyZXRzdWIKCi8vIHNlbmRfYWxnb3NfY2FzdGVyCnNlbmRhbGdvc2Nhc3Rlcl8xMjoKcHJvdG8gMCAwCmJ5dGVjXzAgLy8gIiIKaW50Y18wIC8vIDAKYnl0ZWNfMCAvLyAiIgp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmJ0b2kKZnJhbWVfYnVyeSAxCnR4bmEgQXBwbGljYXRpb25BcmdzIDIKZnJhbWVfYnVyeSAyCmZyYW1lX2RpZyAxCmZyYW1lX2RpZyAyCmNhbGxzdWIgc2VuZGFsZ29zXzQKZnJhbWVfYnVyeSAwCmJ5dGVjXzIgLy8gMHgxNTFmN2M3NQpmcmFtZV9kaWcgMApjb25jYXQKbG9nCnJldHN1YgoKLy8gc2lnbl90eG5fY2FzdGVyCnNpZ250eG5jYXN0ZXJfMTM6CnByb3RvIDAgMApieXRlY18wIC8vICIiCmR1cAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmZyYW1lX2J1cnkgMQpmcmFtZV9kaWcgMQpjYWxsc3ViIHNpZ250eG5fNQpmcmFtZV9idXJ5IDAKYnl0ZWNfMiAvLyAweDE1MWY3Yzc1CmZyYW1lX2RpZyAwCmNvbmNhdApsb2cKcmV0c3ViCgovLyBhZGRfdHhuX2Nhc3RlcgphZGR0eG5jYXN0ZXJfMTQ6CnByb3RvIDAgMApieXRlY18wIC8vICIiCmR1cG4gMgp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmZyYW1lX2J1cnkgMQp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmZyYW1lX2J1cnkgMgpmcmFtZV9kaWcgMQpmcmFtZV9kaWcgMgpjYWxsc3ViIGFkZHR4bl82CmZyYW1lX2J1cnkgMApieXRlY18yIC8vIDB4MTUxZjdjNzUKZnJhbWVfZGlnIDAKY29uY2F0CmxvZwpyZXRzdWIKCi8vIHJlbW92ZV90eG5fY2FzdGVyCnJlbW92ZXR4bmNhc3Rlcl8xNToKcHJvdG8gMCAwCmJ5dGVjXzAgLy8gIiIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpmcmFtZV9idXJ5IDAKZnJhbWVfZGlnIDAKY2FsbHN1YiByZW1vdmV0eG5fNwpyZXRzdWI=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 10,
            "num_uints": 3
        },
        "local": {
            "num_byte_slices": 1,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "ownersCount": {
                    "type": "uint64",
                    "key": "ownersCount",
                    "descr": "Number of owners in smart contract wallet"
                },
                "threshold": {
                    "type": "uint64",
                    "key": "threshold",
                    "descr": "Signing threshold of smart contract wallet"
                },
                "version": {
                    "type": "uint64",
                    "key": "version",
                    "descr": "Smart wallet contract version number"
                }
            },
            "reserved": {
                "owners": {
                    "type": "bytes",
                    "max_keys": 10,
                    "descr": "An owner's public address"
                }
            }
        },
        "local": {
            "declared": {
                "name": {
                    "type": "bytes",
                    "key": "hello",
                    "descr": ""
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "SmartContractWallet",
        "methods": [
            {
                "name": "create",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "uint64",
                        "name": "version"
                    },
                    {
                        "type": "uint64",
                        "name": "threshold"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "set_owner",
                "args": [
                    {
                        "type": "uint64",
                        "name": "index"
                    },
                    {
                        "type": "address",
                        "name": "address"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "send_algos",
                "args": [
                    {
                        "type": "uint64",
                        "name": "amount"
                    },
                    {
                        "type": "string",
                        "name": "boxName"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "sign_txn",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "add_txn",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "string",
                        "name": "txn"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "remove_txn",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "opt_in": "CALL"
    }
}